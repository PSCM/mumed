{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1Yy5WwaCDhnjPr-uBNbe7CdXZFatZhbyk","authorship_tag":"ABX9TyNcjA1/C21v9tHLk/cpO1eZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# Instalar as bibliotecas, se necessário\n","!pip install essentia"],"metadata":{"id":"SzwhRAbqQ18O","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674598238714,"user_tz":180,"elapsed":6986,"user":{"displayName":"Paulo Sergio Moreira","userId":"03372049132457586236"}},"outputId":"f3061c23-18fe-4cd8-db5d-616417e95efa"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting essentia\n","  Downloading essentia-2.1b6.dev858-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.6/13.6 MB\u001b[0m \u001b[31m44.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: six in /usr/local/lib/python3.8/dist-packages (from essentia) (1.15.0)\n","Requirement already satisfied: numpy>=1.8.2 in /usr/local/lib/python3.8/dist-packages (from essentia) (1.21.6)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.8/dist-packages (from essentia) (6.0)\n","Installing collected packages: essentia\n","Successfully installed essentia-2.1b6.dev858\n"]}]},{"cell_type":"code","source":["# Importar as bibliotecas\n","import pandas as pd\n","import numpy as np\n","import librosa\n","import essentia\n","import essentia.standard as es\n","import os\n","import re\n","import warnings\n","warnings.filterwarnings(\"ignore\", message=\"PySoundFile failed\")"],"metadata":{"id":"CBLjBr8Rpyv4","executionInfo":{"status":"ok","timestamp":1674598256767,"user_tz":180,"elapsed":6048,"user":{"displayName":"Paulo Sergio Moreira","userId":"03372049132457586236"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# Indicar o local das músicas\n","path = '/content/drive/MyDrive/aug' # criar a pasta, caso utilize o Colab"],"metadata":{"id":"u7_Kdz8ckJGf","executionInfo":{"status":"ok","timestamp":1674598265388,"user_tz":180,"elapsed":390,"user":{"displayName":"Paulo Sergio Moreira","userId":"03372049132457586236"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Características Essentia\n","def extract_featuresEssentia(path):\n","  \n","  files = os.listdir(path)\n","  files.sort(key=lambda f: int(re.sub('\\D', '', f))) # ordenar os arquivos\n","\n","  featuresEssentia = []\n","\n","  for f in files:\n","    audio = es.MonoLoader(filename= path+'/'+f)()\n","  \n","    # bpm\n","    rhythm_extractor = es.RhythmExtractor2013(method=\"multifeature\")\n","    bpm = rhythm_extractor(audio)\n","\n","    # predominant melody\n","    run_predominant_melody = es.PitchMelodia()\n","    pitchMelodia, confidence = run_predominant_melody(audio)\n","\n","    # loudness\n","    run_loudness = es.Loudness()\n","    loud = es.Loudness()\n","    audio = es.EqualLoudness()(audio)\n","    loudness = loud(audio)\n","\n","    # pitch salience\n","    run_pitch_salience = es.PitchSalience()\n","    pitchSalience = run_pitch_salience(audio)\n","\n","    # danceability\n","    run_danceability = es.Danceability()\n","    danceability = run_danceability(audio)\n","\n","    # flux\n","    run_flux = es.Flux()\n","    flux = run_flux(audio)\n","\n","    # key - scale\n","    run_key = es.KeyExtractor(profileType='krumhansl')\n","    key, scale, strength = run_key(audio)\n","\n","    # dicionário para armazenar os valores/características\n","    essentia_audio = {\n","      \"title\": f,\n","      \"loudness\": loudness,\n","      \"scale\": scale,\n","      \"key\": key,\n","      \"salience\": pitchSalience,\n","      \"melodiaMean\": np.mean(pitchMelodia),\n","      \"melodiaSTD\":  np.std(pitchMelodia),\n","      \"bpm\": bpm[0],\n","      \"danceability\": danceability[0],\n","      \"flux\": flux,\n","    }\n","\n","   \n","    featuresEssentia.append(essentia_audio)\n","    df2  = pd.json_normalize(featuresEssentia)  # salvar os valores em um data frame (df)\n","  return df2"],"metadata":{"id":"HnvpO1ZmvB7o","executionInfo":{"status":"ok","timestamp":1674598266886,"user_tz":180,"elapsed":290,"user":{"displayName":"Paulo Sergio Moreira","userId":"03372049132457586236"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Características librosa\n","def extract_featuresLibrosa(path):\n","\n","  files = os.listdir(path)\n","  files.sort(key=lambda f: int(re.sub('\\D', '', f))) # ordenar os arquivos\n","  \n","  features = []\n","\n","  for f in files:\n","    y, sr = librosa.load(path+'/'+f)\n","\n","    rms       = librosa.feature.rms(y=y) # rms\n","    chroma    = librosa.feature.chroma_stft(y=y, sr=sr) # cromagrama - 12\n","    onset_env = librosa.onset.onset_strength(y=y, sr=sr) # onset (necessário para plp)\n","    pulse     = librosa.beat.plp(onset_envelope=onset_env, sr=sr) # plp\n","    mfcc      = librosa.feature.mfcc(y=y, sr=sr, n_mfcc=13) # mfcc - 13\n","    centroid  = librosa.feature.spectral_centroid(y=y, sr=sr) # spectral centroid\n","    rollof    = librosa.feature.spectral_rolloff(y=y, sr=sr) # rollof - 0,85\n","    zcr       = librosa.feature.zero_crossing_rate(y) # zcr\n","\n","    # dicionário para armazenar os valores/características\n","    audio_features = {\n","        \"title\": f,\n","        \"rmsMean\": np.mean(rms),\n","        \"rmsSTD\":  np.std(rms),\n","        \"chromaMean1\": np.mean(chroma[0]),\n","        \"chromaSTD1\": np.std(chroma[0]),\n","        \"chromaMean2\": np.mean(chroma[1]),\n","        \"chromaSTD2\": np.std(chroma[1]),\n","        \"chromaMean3\": np.mean(chroma[2]),\n","        \"chromaSTD3\": np.std(chroma[2]),\n","        \"chromaMean4\": np.mean(chroma[3]),\n","        \"chromaSTD4\": np.std(chroma[3]),\n","        \"chromaMean5\": np.mean(chroma[4]),\n","        \"chromaSTD5\": np.std(chroma[4]),\n","        \"chromaMean6\": np.mean(chroma[5]),\n","        \"chromaSTD6\": np.std(chroma[5]),\n","        \"chromaMean7\": np.mean(chroma[6]),\n","        \"chromaSTD7\": np.std(chroma[6]),\n","        \"chromaMean8\": np.mean(chroma[7]),\n","        \"chromaSTD8\": np.std(chroma[7]),\n","        \"chromaMean9\": np.mean(chroma[8]),\n","        \"chromaSTD9\": np.std(chroma[8]),\n","        \"chromaMean10\": np.mean(chroma[9]),\n","        \"chromaSTD10\": np.std(chroma[9]),\n","        \"chromaMean11\": np.mean(chroma[10]),\n","        \"chromaSTD11\": np.std(chroma[10]),\n","        \"chromaMean12\": np.mean(chroma[11]),\n","        \"chromaSTD12\": np.std(chroma[11]),\n","        \"pulseMean\": np.mean(pulse),\n","        \"pulseSTD\": np.std(pulse),\n","        \"mfcc1Mean\": np.mean(mfcc[0]),\n","        \"mfcc1STD\": np.std(mfcc[0]),\n","        \"mfcc2Mean\": np.mean(mfcc[1]),\n","        \"mfcc2STD\": np.std(mfcc[1]),\n","        \"mfcc3Mean\": np.mean(mfcc[2]),\n","        \"mfcc3STD\": np.std(mfcc[2]),\n","        \"mfcc4Mean\": np.mean(mfcc[3]),\n","        \"mfcc4STD\": np.std(mfcc[3]),\n","        \"mfcc5Mean\": np.mean(mfcc[4]),\n","        \"mfcc5STD\": np.std(mfcc[4]),\n","        \"mfcc6Mean\": np.mean(mfcc[5]),\n","        \"mfcc6STD\": np.std(mfcc[5]),\n","        \"mfcc7Mean\": np.mean(mfcc[6]),\n","        \"mfcc7STD\": np.std(mfcc[6]),\n","        \"mfcc8Mean\": np.mean(mfcc[7]),\n","        \"mfcc8STD\": np.std(mfcc[7]),\n","        \"mfcc9Mean\": np.mean(mfcc[8]),\n","        \"mfcc9STD\": np.std(mfcc[8]),\n","        \"mfcc10Mean\": np.mean(mfcc[9]),\n","        \"mfcc10STD\": np.std(mfcc[9]),\n","        \"mfcc11Mean\": np.mean(mfcc[10]),\n","        \"mfcc11STD\": np.std(mfcc[10]),\n","        \"mfcc12Mean\": np.mean(mfcc[11]),\n","        \"mfcc12STD\": np.std(mfcc[11]),\n","        \"mfcc13Mean\": np.mean(mfcc[12]),\n","        \"mfcc13STD\": np.std(mfcc[12]),\n","        \"centroidMean\": np.mean(centroid),\n","        \"centroidSTD\": np.std(centroid),\n","        \"rollofMean\": np.mean(rollof),\n","        \"rollofSTD\": np.std(rollof),\n","        \"zcrMean\": np.mean(zcr),\n","        \"zcrSTD\": np.std(zcr),\n","    }\n","\n","    features.append(audio_features)\n","  df  = pd.json_normalize(features)   # salvar os valores em um data frame (df)\n","  return df"],"metadata":{"id":"Bm_di2QjvDgV","executionInfo":{"status":"ok","timestamp":1674598273631,"user_tz":180,"elapsed":409,"user":{"displayName":"Paulo Sergio Moreira","userId":"03372049132457586236"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# Criar os dfs a partir das funções de extração\n","df1  = extract_featuresLibrosa(path)\n","df2 = extract_featuresEssentia(path)"],"metadata":{"id":"Xzu9Cr92OWim","executionInfo":{"status":"ok","timestamp":1674604512061,"user_tz":180,"elapsed":6235361,"user":{"displayName":"Paulo Sergio Moreira","userId":"03372049132457586236"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Unir os dfs e gerar a base final\n","df = pd.concat([df1, df2], axis=1, join='inner')\n","df.head(3)"],"metadata":{"id":"6937uwueZlXe","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1674604681751,"user_tz":180,"elapsed":516,"user":{"displayName":"Paulo Sergio Moreira","userId":"03372049132457586236"}},"outputId":"618a2d5e-21b1-48a5-98f4-907d31b8916b"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   title   rmsMean    rmsSTD  chromaMean1  chromaSTD1  \\\n","0   9_audio.wav_time.wav  0.080010  0.051514     0.461432    0.339725   \n","1  10_audio.wav_time.wav  0.068535  0.037206     0.286478    0.253034   \n","2  19_audio.wav_time.wav  0.115738  0.058354     0.626712    0.265787   \n","\n","   chromaMean2  chromaSTD2  chromaMean3  chromaSTD3  chromaMean4  ...  \\\n","0     0.279153    0.224387     0.275549    0.319200     0.319375  ...   \n","1     0.264378    0.240626     0.389915    0.245728     0.577749  ...   \n","2     0.636088    0.257456     0.591510    0.263192     0.482995  ...   \n","\n","                   title    loudness  scale  key  salience  melodiaMean  \\\n","0   9_audio.wav_time.wav   91.206665  minor    B  0.432912    83.155205   \n","1  10_audio.wav_time.wav   95.340965  major    E  0.064747    65.614319   \n","2  19_audio.wav_time.wav  137.863190  minor    B  0.026192    89.624573   \n","\n","   melodiaSTD         bpm  danceability       flux  \n","0   62.037003   94.633568      1.586296  29.020597  \n","1   70.422066  150.777023      1.327605  29.996754  \n","2  286.602081   89.849236      2.294399  39.500553  \n","\n","[3 rows x 71 columns]"],"text/html":["\n","  <div id=\"df-aa0554d9-268c-4d03-9805-1870e9d253d5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>rmsMean</th>\n","      <th>rmsSTD</th>\n","      <th>chromaMean1</th>\n","      <th>chromaSTD1</th>\n","      <th>chromaMean2</th>\n","      <th>chromaSTD2</th>\n","      <th>chromaMean3</th>\n","      <th>chromaSTD3</th>\n","      <th>chromaMean4</th>\n","      <th>...</th>\n","      <th>title</th>\n","      <th>loudness</th>\n","      <th>scale</th>\n","      <th>key</th>\n","      <th>salience</th>\n","      <th>melodiaMean</th>\n","      <th>melodiaSTD</th>\n","      <th>bpm</th>\n","      <th>danceability</th>\n","      <th>flux</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9_audio.wav_time.wav</td>\n","      <td>0.080010</td>\n","      <td>0.051514</td>\n","      <td>0.461432</td>\n","      <td>0.339725</td>\n","      <td>0.279153</td>\n","      <td>0.224387</td>\n","      <td>0.275549</td>\n","      <td>0.319200</td>\n","      <td>0.319375</td>\n","      <td>...</td>\n","      <td>9_audio.wav_time.wav</td>\n","      <td>91.206665</td>\n","      <td>minor</td>\n","      <td>B</td>\n","      <td>0.432912</td>\n","      <td>83.155205</td>\n","      <td>62.037003</td>\n","      <td>94.633568</td>\n","      <td>1.586296</td>\n","      <td>29.020597</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10_audio.wav_time.wav</td>\n","      <td>0.068535</td>\n","      <td>0.037206</td>\n","      <td>0.286478</td>\n","      <td>0.253034</td>\n","      <td>0.264378</td>\n","      <td>0.240626</td>\n","      <td>0.389915</td>\n","      <td>0.245728</td>\n","      <td>0.577749</td>\n","      <td>...</td>\n","      <td>10_audio.wav_time.wav</td>\n","      <td>95.340965</td>\n","      <td>major</td>\n","      <td>E</td>\n","      <td>0.064747</td>\n","      <td>65.614319</td>\n","      <td>70.422066</td>\n","      <td>150.777023</td>\n","      <td>1.327605</td>\n","      <td>29.996754</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>19_audio.wav_time.wav</td>\n","      <td>0.115738</td>\n","      <td>0.058354</td>\n","      <td>0.626712</td>\n","      <td>0.265787</td>\n","      <td>0.636088</td>\n","      <td>0.257456</td>\n","      <td>0.591510</td>\n","      <td>0.263192</td>\n","      <td>0.482995</td>\n","      <td>...</td>\n","      <td>19_audio.wav_time.wav</td>\n","      <td>137.863190</td>\n","      <td>minor</td>\n","      <td>B</td>\n","      <td>0.026192</td>\n","      <td>89.624573</td>\n","      <td>286.602081</td>\n","      <td>89.849236</td>\n","      <td>2.294399</td>\n","      <td>39.500553</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 71 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa0554d9-268c-4d03-9805-1870e9d253d5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aa0554d9-268c-4d03-9805-1870e9d253d5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aa0554d9-268c-4d03-9805-1870e9d253d5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.to_excel('audio2.xlsx', index= False)"],"metadata":{"id":"buehoDng3LWj","executionInfo":{"status":"ok","timestamp":1674604695776,"user_tz":180,"elapsed":5170,"user":{"displayName":"Paulo Sergio Moreira","userId":"03372049132457586236"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["df = pd.read_excel('/content/audio.xlsx')"],"metadata":{"id":"CF9-0vu0Pr5u"},"execution_count":null,"outputs":[]}]}